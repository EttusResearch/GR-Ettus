# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-ettus
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

if(ENABLE_FOSPHOR)
    qt5_add_resources(FOSPHOR_RC_SRCS fosphor.qrc)
    set(CMAKE_AUTOMOC ON)
    include_directories(${Qt5Widgets_INCLUDE_DIRS}
        ${Qt5OpenGL_INCLUDE_DIRS})
endif(ENABLE_FOSPHOR)

list(APPEND ettus_sources
    rfnoc_block.cc
    rfnoc_block_generic_impl.cc
    rfnoc_ddc_impl.cc
    rfnoc_duc_impl.cc
    rfnoc_fir_filter_impl.cc
    rfnoc_siggen_impl.cc
    rfnoc_window_impl.cc
    rfnoc_graph_impl.cc
    rfnoc_rx_radio_impl.cc
    rfnoc_rx_streamer_impl.cc
    rfnoc_tx_radio_impl.cc
    rfnoc_tx_streamer_impl.cc
)

if(ENABLE_FOSPHOR)
    list(APPEND ettus_sources
        axis.c
        fosphor_display_impl.cc
        QFosphorColorMapper.cc
        QFosphorSurface.cc
        ${FOSPHOR_RC_SRCS}
    )
endif(ENABLE_FOSPHOR)

set(ettus_sources "${ettus_sources}" PARENT_SCOPE)
if(NOT ettus_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT ettus_sources)

add_library(gnuradio-ettus SHARED ${ettus_sources})
include(GrPython)
if(ENABLE_PYTHON)
    target_compile_definitions(gnuradio-ettus PUBLIC -DENABLE_PYTHON)
    target_link_libraries(gnuradio-ettus Python::Python)
endif(ENABLE_PYTHON)

if(ENABLE_FOSPHOR)
    target_link_libraries(gnuradio-ettus
        gnuradio::gnuradio-runtime
        Qt5::Core
        Qt5::Gui
        Qt5::OpenGL
        ${UHD_LIBRARIES}
    )
    if(ENABLE_PYTHON)
        target_link_libraries(gnuradio-ettus
            Python::Python
        )
    endif(ENABLE_PYTHON)
else(ENABLE_FOSPHOR)
    target_link_libraries(gnuradio-ettus
        gnuradio::gnuradio-runtime
        ${UHD_LIBRARIES}
)
endif(ENABLE_FOSPHOR)
target_include_directories(gnuradio-ettus
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
    ${UHD_INCLUDE_DIRS}
)
set_target_properties(gnuradio-ettus PROPERTIES DEFINE_SYMBOL "gnuradio_ettus_EXPORTS")


if(APPLE)
    set_target_properties(gnuradio-ettus PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-ettus)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_ettus_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-ettus)

if(NOT test_ettus_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_ettus_sources)

foreach(qa_file ${test_ettus_sources})
    GR_ADD_CPP_TEST("ettus_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
